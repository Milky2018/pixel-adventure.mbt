// Generated using `moon info`, DON'T EDIT IT
package "peter-jerry-ye/adventure/object"

import(
  "peter-jerry-ye/adventure/entity"
)

// Values
fn collides(@entity.Entity, @entity.Entity) -> Bool

fn enter_state(@entity.Entity, State) -> Unit

fn get_character(@entity.Entity) -> Character?

fn get_direction(@entity.Entity) -> Direction?

fn get_stage(@entity.Entity) -> Stage?

fn get_state(@entity.Entity) -> State?

fn get_terrain(@entity.Entity) -> Terrain?

fn has_gravity(@entity.Entity) -> Bool

fn set_character(@entity.Entity, Character) -> Unit

fn set_direction(@entity.Entity, Direction) -> Unit

fn set_stage(@entity.Entity, Stage) -> Unit

fn set_terrain(@entity.Entity, Terrain) -> Unit

// Types and methods
pub(all) enum Character {
  MaskDude
  Mushroom
  Banana
  RockHead
  Trophy
}
impl Eq for Character
impl Hash for Character

pub(all) enum Direction {
  Left
  Right
}

pub(all) enum Stage {
  Enter
  Active
  Exit
}
impl Eq for Stage
impl Hash for Stage

pub(all) enum State {
  Idle
  Hit
  Jump
  Fall
  Run
  Disapper
  Pressed
  Blink
  BottomHit
  RightHit
  TopHit
  LeftHit
}
impl Eq for State
impl Hash for State
impl Show for State

pub(all) enum Terrain {
  Flat_Steel
  GrassBlock
}

// Type aliases

// Traits

